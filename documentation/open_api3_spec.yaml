openapi: "3.0.0"
info:
  version: "0.1.0"
  title: "medical_app"
  description: Manage patient records for easier access to treatment history

servers:
  - url: http://127.0.0.1:5000

paths:
  /medics:
    get:
      summary: Get all medics
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: The page number in the results
      responses:
        "200":
          description: Array of medics, paginated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicArrayResponseBody"
        default:
          $ref: "#/components/responses/default"
    post:
      summary: Create a new medic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Medic"
      responses:
        "200":
          description: Model of the newly created medic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicResponseBody"
        default:
          $ref: "#/components/responses/default"
  /medics/{medicId}:
    parameters:
      - name: medicId
        description: The unique identifier of the Medic
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/MedicId"
    get:
      summary: Get a specific medic
      responses:
        "200":
          description: One specific medic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicResponseBody"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/default"
    delete:
      summary: Delete a specific medic
      responses:
        "200":
          description: Id of deleted medic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicIdResponseBody"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/default"
    patch:
      summary: Update a specific model
      responses:
        "200":
          description: New state of updated Medic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicResponseBody"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/default"

  /medics/{medicId}/patients:
    parameters:
      - name: medicId
        description: The unique identifier of the Medic
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/MedicId"
    get:
      summary: Get all patients of one medic
      responses:
        "200":
          description: Array of patients of one medic, paginated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientArrayResponseBody"
        default:
          $ref: "#/components/responses/default"
  /patients/{patientId}:
    parameters:
      - name: patientId
        description: The unique identifier of a patient
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/PatientId"
    get:
      summary: Get specific patient
      responses:
        "200":
          description: One specific patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientResponseBody"
    delete:
      summary: Delete a specific patient
      responses:
        "200":
          description: Id of deleted patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientIdResponseBody"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/default"
    patch:
      summary: Update a specific patient
      responses:
        "200":
          description: New state of updated patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientResponseBody"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/default"
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: error
            message: Resource not found
            code: 404
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: error
            message: Some error message
            code: Some error code
  schemas:
    SuccessResponseBody:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: string
        data:
          type: object
    PatientId:
      description: The unique identifier of a patient
      type: string
    PatientIdResponseBody:
      description: successful response with id of medic
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/MedicId"
    Patient:
      description: Model of a patient
      type: object
      required:
        - firstName
        - lastName
        - email
        - records
        - medics
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/PatientId"
            - readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        records:
          $ref: "#/components/schemas/RecordArray"
        medics:
          $ref: "#/components/schemas/MedicArray"
    PatientResponseBody:
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/Patient"
    PatientArray:
      type: array
      items:
        $ref: "#/components/schemas/Patient"
    PatientArrayResponseBody:
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/PatientArray"
    MedicId:
      description: The unique identifier of a medical professional
      type: integer
    MedicIdResponseBody:
      description: successful response with array of medics
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/MedicId"
    Medic:
      description: Model of a medical professional
      type: object
      required:
        - firstName
        - lastName
        - email
        # - patients
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/MedicId"
            - readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        patients:
          $ref: "#/components/schemas/PatientArray"
    MedicResponseBody:
      description: successful response with array of medics
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/MedicArray"
    MedicArray:
      description: array of medics
      type: array
      minItems: 0
      maxItems: 10
      items:
        $ref: "#/components/schemas/Medic"
    MedicArrayResponseBody:
      description: successful response with array of medics
      allOf:
        - $ref: "#/components/schemas/SuccessResponseBody"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/MedicArray"
    RecordId:
      description: The unique identifier of a medical record
      type: string
    Record:
      description: Model of a medical record
      type: object
      required:
        - title
        - description
        - symptoms
        - date_diagnosis
        - date_symptom_onset
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/RecordId"
            - readOnly: true
        title:
          type: string
        description:
          type: string
        symptoms:
          type: array
          items:
            type: string
        date_diagnosis:
          type: string
          format: date
        date_symptom_onset:
          type: string
          format: date
        date_symptom_offset:
          type: string
          format: date
    RecordArray:
      type: array
      items:
        $ref: "#/components/schemas/Record"
    Error:
      type: object
      required:
        - status
        - message
        - code
      properties:
        status:
          description: human readable exit status
          type: string
        message:
          description: A human readable error message
          type: string
        code:
          description: http error code
          type: integer
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
